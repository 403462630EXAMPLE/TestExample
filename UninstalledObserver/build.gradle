apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jni.srcDirs = []
            assets.srcDirs = ['src/main/assets']
        }
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn 'ndkBuild', 'copyExeFile'
    }

    uploadArchives {
        repositories {
            apply plugin: 'maven'
            mavenDeployer {
                pom.groupId = "com.ytx.android.library"
                pom.version = "1.0.0"
                repository(url: mavenServer + mavenReleases) {
                    authentication(userName: repoUsername, password: repoPassword)
                }
            }
        }
    }
}

task ndkBuild(type: Exec) {
    def ndkDir = project.plugins.findPlugin('com.android.library').sdkHandler.getNdkFolder()
    commandLine "$ndkDir/ndk-build", '-C', 'src/main/jni',
            "NDK_OUT=$buildDir/ndk/obj",
            "NDK_APP_DST_DIR=$buildDir/ndk/libs/\$(TARGET_ARCH_ABI)"
}

task copyExeFile(type: Copy) {
    from fileTree(dir: file(buildDir.absolutePath + '/ndk/libs/armeabi'), include: '*')
    into file('src/main/assets')
}
